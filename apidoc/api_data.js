define({ "api": [  {    "type": "delete",    "url": "/comments/:user_id/:picture_id",    "title": "DELETE comment",    "version": "1.0.0",    "group": "Comments",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "comment",            "description": "<p>Deleted comment.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  comment_id: 1,\n  user_id: 1,\n  picture_id: 1,\n  comment: 'I love to code!'\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>User not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"User not found\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"Picture not found\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"Comment not found\"\n}",          "type": "json"        }      ]    },    "filename": "routes/comments.js",    "groupTitle": "Comments",    "name": "DeleteCommentsUser_idPicture_id"  },  {    "type": "get",    "url": "/comments/:user_id",    "title": "GET user comments",    "version": "1.0.0",    "group": "Comments",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "comments",            "description": "<p>Comments of the user.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  comment_id: 1,\n  user_id: 1,\n  picture_id: 1,\n  comment: 'I love to code!'\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>This user hasn't commented or doesn't exist.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"This user hasn't commented or doesn't exist\"\n}",          "type": "json"        }      ]    },    "filename": "routes/comments.js",    "groupTitle": "Comments",    "name": "GetCommentsUser_id"  },  {    "type": "get",    "url": "/comments/:user_id/:picture_id",    "title": "GET user comment on a picture",    "version": "1.0.0",    "group": "Comments",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "comment",            "description": "<p>User comment on a picture.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  comment_id: 1,\n  user_id: 1,\n  picture_id: 1,\n  comment: 'I love to code!'\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>Please enter a valid picture id.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"Please enter a valid picture id\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"Please enter a valid user id\"\n}",          "type": "json"        }      ]    },    "filename": "routes/comments.js",    "groupTitle": "Comments",    "name": "GetCommentsUser_idPicture_id"  },  {    "type": "post",    "url": "/comments/:user_id",    "title": "POST comment",    "version": "1.0.0",    "group": "Comments",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "comment",            "description": "<p>Comment posted by the user.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  user_id: 1,\n  picture_id: 1,\n  comment: 'I love to code!'\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>User not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"User not found\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"Please enter a valid picture id\"\n}",          "type": "json"        }      ]    },    "filename": "routes/comments.js",    "groupTitle": "Comments",    "name": "PostCommentsUser_id"  },  {    "type": "delete",    "url": "/pictures/:user_id/:picture_id",    "title": "DELETE Picture from favorites",    "version": "1.0.0",    "group": "Pictures",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "picture",            "description": "<p>Returns a picture.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  picture_id: 1,\n  url: \"https://farm1.staticflickr.com/2/1418878_1e92283336_m.jpg\",\n  lat: \"54.627389\",\n  lon: \"-122.500307\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>User at :id not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"User at 1 not found\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"Picture at 1 not found\"\n}",          "type": "json"        }      ]    },    "filename": "routes/pictures.js",    "groupTitle": "Pictures",    "name": "DeletePicturesUser_idPicture_id"  },  {    "type": "get",    "url": "/pictures",    "title": "GET All pictures",    "version": "1.0.0",    "group": "Pictures",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "pictures",            "description": "<p>Returns all pictures.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n[{\n  picture_id: 1,\n  url: \"https://farm1.staticflickr.com/2/1418878_1e92283336_m.jpg\",\n  lat: \"54.627389\",\n  lon: \"-122.500307\"\n}]",          "type": "json"        }      ]    },    "filename": "routes/pictures.js",    "groupTitle": "Pictures",    "name": "GetPictures"  },  {    "type": "get",    "url": "/pictures/:user_id",    "title": "GET Users pictures",    "version": "1.0.0",    "group": "Pictures",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "pictures",            "description": "<p>Returns users pictures.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n[{\n  picture_id: 1,\n  url: \"https://farm1.staticflickr.com/2/1418878_1e92283336_m.jpg\",\n  lat: \"54.627389\",\n  lon: \"-122.500307\"\n}]",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>User at :id not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"User at 1 not found\"\n}",          "type": "json"        }      ]    },    "filename": "routes/pictures.js",    "groupTitle": "Pictures",    "name": "GetPicturesUser_id"  },  {    "type": "get",    "url": "/pictures/:user_id/:picture_id",    "title": "GET Users pictures",    "version": "1.0.0",    "group": "Pictures",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "picture",            "description": "<p>Returns a picture.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  picture_id: 1,\n  url: \"https://farm1.staticflickr.com/2/1418878_1e92283336_m.jpg\",\n  lat: \"54.627389\",\n  lon: \"-122.500307\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>User at :id not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"User at 1 not found\"\n}",          "type": "json"        }      ]    },    "filename": "routes/pictures.js",    "groupTitle": "Pictures",    "name": "GetPicturesUser_idPicture_id"  },  {    "type": "post",    "url": "/pictures/:user_id",    "title": "POST Picture to user favorites",    "version": "1.0.0",    "group": "Pictures",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "picture",            "description": "<p>Returns a picture.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  picture_id: 1,\n  url: \"https://farm1.staticflickr.com/2/1418878_1e92283336_m.jpg\",\n  lat: \"54.627389\",\n  lon: \"-122.500307\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>User at :id not found.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"User at 1 not found\"\n}",          "type": "json"        }      ]    },    "filename": "routes/pictures.js",    "groupTitle": "Pictures",    "name": "PostPicturesUser_id"  },  {    "type": "get",    "url": "/search",    "title": "GET Pictures request from API",    "version": "1.0.0",    "group": "Search",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "pictures",            "description": "<p>Returns array of picture objects.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  url: \"https://farm1.staticflickr.com/2/1418878_1e92283336_m.jpg\",\n  lat: \"54.627389\",\n  lon: \"-122.500307\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "400",            "description": "<p>Search requires both latitude and longetude.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"Search requires both latitude and longetude\"\n}",          "type": "json"        }      ]    },    "filename": "routes/search.js",    "groupTitle": "Search",    "name": "GetSearch"  },  {    "type": "delete",    "url": "/users/:user_id",    "title": "DELETE user",    "version": "1.0.0",    "group": "Users",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>Returns the deleted user.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   { user_id: 1, username: 'HarryPotter321' }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>User at :id not found</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"User at 1 not found\"\n}",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "Users",    "name": "DeleteUsersUser_id"  },  {    "type": "get",    "url": "/users",    "title": "GET users",    "version": "1.0.0",    "group": "Users",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "users",            "description": "<p>Returns all users.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   { user_id: 1, username: 'HarryPotter123' },\n   { user_id: 2, username: 'RonWeasley123' },\n   { user_id: 3, username: 'HermoineGranger123' },\n   { user_id: 4, username: 'DracoMalfoy123' }\n}",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "Users",    "name": "GetUsers"  },  {    "type": "get",    "url": "/users/:user_id",    "title": "GET user",    "version": "1.0.0",    "group": "Users",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>Returns a single user.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   { user_id: 1, username: 'HarryPotter123' }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "404",            "description": "<p>User at :id not found</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"User at 1 not found\"\n}",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "Users",    "name": "GetUsersUser_id"  },  {    "type": "post",    "url": "/login",    "title": "POST login",    "version": "1.0.0",    "group": "Users",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "payload",            "description": "<p>Returns the user login info.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  userId: 1,\n  username: \"HarryPotter123\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "400",            "description": "<p>Bad username or password</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"Bad username or password\"\n}",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "Users",    "name": "PostLogin"  },  {    "type": "post",    "url": "/signup",    "title": "POST signup",    "version": "1.0.0",    "group": "Users",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Returns the username of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Returns the password of the User.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  username: \"HarryPotter123\",\n  password: \"youreawizard\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "400",            "description": "<p>Username already exists</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"Username already exists\"\n}",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "Users",    "name": "PostSignup"  },  {    "type": "put",    "url": "/users/:user_id",    "title": "UPDATE user",    "version": "1.0.0",    "group": "Users",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>Returns the updated user.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   { user_id: 1, username: 'HarryPotter321' }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "403",            "description": "<p>Username must be unique</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 403 Forbidden\n{\n  \"Username must be unique\"\n}",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "Users",    "name": "PutUsersUser_id"  }] });
